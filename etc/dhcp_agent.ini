[DEFAULT]
# Show debugging output in log (sets DEBUG log level output)
# debug = true

# Where to store dnsmasq state files.  This directory must be writable by the
# user executing the agent.
# state_path = /var/lib/quantum

# The DHCP agent will resync its state with Quantum to recover from any
# transient notification or rpc errors. The interval is number of
# seconds between attempts.
# resync_interval = 5

# The DHCP requires that an inteface driver be set.  Choose the one that best
# matches you plugin.

# OVS based plugins(OVS, Ryu, NEC, NVP, BigSwitch/Floodlight)
interface_driver = quantum.agent.linux.interface.OVSInterfaceDriver
# OVS based plugins(Ryu, NEC, NVP, BigSwitch/Floodlight) that use OVS
# as OpenFlow switch and check port status
#ovs_use_veth = True
# LinuxBridge
#interface_driver = quantum.agent.linux.interface.BridgeInterfaceDriver

# The agent can use other DHCP drivers.  Dnsmasq is the simplest and requires
# no additional setup of the DHCP server.
dhcp_driver = quantum.agent.linux.dhcp.Dnsmasq

# Allow overlapping IP (Must have kernel build with CONFIG_NET_NS=y and
# iproute2 package that supports namespaces).
# use_namespaces = True

#  The DHCP server can assist with providing metadata support on isolated
#  networks. Setting this value to True will cause the DHCP server to append
#  specific host routes to the DHCP request.  The metadata service will only
#  be activated when the subnet gateway_ip is None.  The guest instance must
#  be configured to request host routes via DHCP (Option 121).
# enable_isolated_metadata = False
